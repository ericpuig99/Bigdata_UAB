Ens hem trobat que no podem identificar la taula que volem per la seva classe perquè està repetida.

```Python
#pip install beautifulfulsoup4  
#pip install requests  
#pip install spotipy  
# pip3 install lxml  
  
  
import requests #modul per treure info de les pàgines web  
from bs4 import BeautifulSoup  
import pandas as pd  
  
llista_dataframes = []  
anys = range(2000, 2023, 1) #1 es la suma periòdica que s'afegirà al número 2000  
for any in anys:  
    try:  
        resposta = requests.get(f"https://es.wikipedia.org/wiki/Festival_de_la_Canción_de_Eurovisión_{any}")  
        soup = BeautifulSoup(resposta.text, "html.parser")  
        final = soup.find("span", id="Final")  
        taules = final.find_next("table")  
        df = pd.read_html(taules.prettify())[0]  
        df["any"] = any  
        print(df)  
        llista_dataframes.append(df)  
    except AttributeError:  
        print(f"error: {any}")  
  
final = pd.concat(llista_dataframes)  
final.to_excel("llista_final.xlsx, index=False")
```

El resultat que ens dona anteriorment és erroni perquè les taules no coincideixen en quant a variables.

```Python
#pip install beautifulfulsoup4  
#pip install requests  
#pip install spotipy  
# pip3 install lxml  
  
  
import requests #modul per treure info de les pàgines web  
from bs4 import BeautifulSoup  
import pandas as pd  
  
llista_dataframes = []  
anys = range(2000, 2023, 1) #1 es la suma periòdica que s'afegirà al número 2000  
for any in anys:  
    try:  
        resposta = requests.get(f"https://es.wikipedia.org/wiki/Festival_de_la_Canción_de_Eurovisión_{any}")  
        soup = BeautifulSoup(resposta.text, "html.parser")  
        final = soup.find("span", id="Final")  
        taules = final.find_next("table")  
        df = pd.read_html(taules.prettify())[0]  
        df["any"] = any  
        print(df)  



		df.columns.values[0] = "N."
		df.columns.values[5] = "Puntos"
		df.columns.values[2] = "Cantante"
		
        llista_dataframes.append(df)  
    except AttributeError:  
        print(f"error: {any}")  
  
final = pd.concat(llista_dataframes)  
final.to_excel("llista_final.xlsx, index=False")
```

Ara hem de treure les dades de spotify

```Python

#pip install beautifulfulsoup4  
#pip install requests  
#pip install spotipy  
# pip3 install lxml  
  
  
import requests #modul per treure info de les pàgines web  
from bs4 import BeautifulSoup  
import pandas as pd  
  
llista_dataframes = []  
anys = range(2000, 2023, 1) #1 es la suma periòdica que s'afegirà al número 2000  
for any in anys:  
    try:  
        resposta = requests.get(f"https://es.wikipedia.org/wiki/Festival_de_la_Canción_de_Eurovisión_{any}")  
        soup = BeautifulSoup(resposta.text, "html.parser")  
        final = soup.find("span", id="Final")  
        taules = final.find_next("table")  
        df = pd.read_html(taules.prettify())[0]  
        df["any"] = any  
        print(df)  



		df.columns.values[0] = "N."
		df.columns.values[5] = "Puntos"
		df.columns.values[2] = "Cantante"
		
        llista_dataframes.append(df)  
    except AttributeError:  
        print(f"error: {any}")  
  
final = pd.concat(llista_dataframes)  


#part spotify
SPOTIPY_CLIENT_ID='6f7e97eae5a848d88b22ff8e0ce20ed6' #id del meu user
SPOTIPY_CLIENT_SECRET='2fada7ddaa164dbea0e1e6d732cc99df' #id secreta del meu user

from spotipy.oauth2 important SpotifyClientCredentials

auth_manager = SpotifyClientCredentials(SPOTIPY_CLIENT_ID, SPOTIPY_CLIENT_SECRET)
sp = spotipy.Spotify(auth_manager=auth_manager)

for index, row in df.interrows():
	artista = row["Cantante"]
	track = row["Canción"].split("«")[1].split("»")[0]
	try:
		p_track = track.split("«")[1].split["»"][0]
	except IndexError:
		p_track = track
	print(artista, track)
	q = f"{p_track} {artista}""
	info = sp.search(q, limit=10, offset=0, type="track", market=None)
	with open("data.json", "w", encoding ="utf-8") as f:
		json.dmp (info, f, ensure_ascii=False, indent=4)
	#extraiem les dades que volem
	try:
		row["url"] = info["tracks"]["items"][0]["externals_urls"]["spotify"]
		track_id = info["tracks"]["items"][0]["id"]
		row["track_id"]=track_id
	except IndexError:
		row["url"]= "no data"
		row["track_id"] = "no data"
	features = sp.audiofeatures(track_id) #aquí dins hi ha totes les variables que volem sobre aquella canço
	features_data = pd.DataFrame.fromdict(features, orient="colums") #cada key es transforma en una columna
	#hem de girar la taula de característiques
	row_df = row.to_frame().T.reset_index(drop=True)
	final_track = pd.concat([row_df, features_data], axis = 1)
	final_track_list.append(final_track)
	time.sleep(0.5)

final_rows = pd.concant(final_track_list)

final_rows.to_excel("finals.xlsx", index=False)
	

```
